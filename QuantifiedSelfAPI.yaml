openapi: 3.0.1
info:
  version: 1.0.1
  title: QunatifiedSelf API
  contact:
    email: swapnilsharmadhoni@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: user
    description: Access to User
  - name: tracker
    description: Access to Tracker
  - name: log
    description: Access to Logs in Tracker
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: provides token to user
      description: ''
      operationId: loginUser
      parameters:
        - name: user_id
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /tracker:
    post:
      tags:
        - tracker
      summary: Add a new tracker to the store
      description: ''
      operationId: addTracker
      parameters:
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Tracker'
      responses:
        '405':
          description: Invalid input
  /tracker/{trackerid}:
    put:
      tags:
        - tracker
      summary: Update an existing tracker
      description: ''
      operationId: updateTracker
      parameters:
        - name: trackerid
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Tracker'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Tracker not found
        '405':
          description: Validation exception
    get:
      tags:
        - tracker
      summary: Find tracker by ID
      description: Returns a single tracker
      operationId: getTrackerById
      parameters:
        - name: trackerid
          in: path
          description: ID of tracker to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
        '404':
          description: Tracker not Found
    delete:
      tags:
        - tracker
      summary: Delete tracker by ID
      description: Deletes a tracker
      operationId: deleteTrackerById
      parameters:
        - name: trackerid
          in: path
          description: ID of tracker to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
        '404':
          description: Tracker not Found
  /log:
    post:
      tags:
        - log
      summary: Add a new tracker to the store
      description: ''
      operationId: addLog
      parameters:
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Log'
      responses:
        '405':
          description: Invalid input
  /log/{logid}:
    put:
      tags:
        - log
      summary: Update an existing log
      description: ''
      operationId: updateLog
      parameters:
        - name: logid
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Log'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Tracker not found
        '405':
          description: Validation exception
    get:
      tags:
        - log
      summary: Find tracker by ID
      description: Returns a single tracker
      operationId: getLogById
      parameters:
        - name: logid
          in: path
          description: ID of tracker to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '404':
          description: Tracker not Found
    delete:
      tags:
        - log
      summary: Delete tracker by ID
      description: Deletes a tracker
      operationId: deleteLogById
      parameters:
        - name: logid
          in: path
          description: ID of tracker to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: header
          description: token for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '404':
          description: Tracker not Found
externalDocs:
  description: Github link of QuantifiedSelf Webapp
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:8080/api
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    Tracker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddTracker'
      description: tracker object that needs to be added to the store
      required: true
    Log:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddLog'
      description: tracker object that needs to be added to the store
      required: true
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
        password:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Tracker:
      type: object
      properties:
        token:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        type:
          type: string
        settings:
          type: string
          description: log status in the tracker
          enum:
            - Numeric
            - List
    Log:
      type: object
      properties:
        token:
          type: string
        id:
          type: integer
          format: int64
        value:
          type: string
        note:
          type: string
        time_stamp:
          type: string
    AddTracker:
      type: object
      properties:
        token:
          type: string
        tracker_name:
          type: string
        tracker_description:
          type: string
        tracker_type:
          type: string
        tracker_settings:
          type: string
          description: log status in the tracker
          enum:
            - Numeric
            - List
    AddLog:
      type: object
      properties:
        token:
          type: string
        tracker_id:
          type: integer
          format: int64
        log_value:
          type: string
        log_note:
          type: string
          enum:
            - Numeric
            - List
        time_stamp:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
